# admin stuff
ADMIN_EMAIL=<ADMIN EMAIL>
DOMAIN=<DOMAIN>
TLS_EMAIL=internal # this for caddy tls. use actual email for production

# this is the root for all the storages from services
DATA="./cloud"

# portainer
# to get password hash: docker run --rm httpd:2.4-alpine htpasswd -nbB admin "password" | cut -d ":" -f 2
PORTAINER_ADMIN_PASSWORD="$2y$05$AG7pZUHQ.7n.1RaaX5DpSeSXbPL.K4Y/FNWuY96.K1BXkqw9zKsd2"

# linuserver.io docker images use th following for the docker user
PUID=1000
PGID=1000
TZ="Europe/Berlin"

# basic password for caddy. username is admin
# generate using: docker run caddy:alpine caddy hash-password --plaintext=password
BASIC_AUTH_PASSWORD=JDJhJDE0JGpTZ1N0c3hDTTBJaWczRmpRWFhhcHUzLkI0SVJmSVUucXVSbmMvSElRRHo2WlguS2tVOXJ1

# bitwarde specific details
WEBSOCKET_ENABLED='true'
SIGNUPS_ALLOWED='true'
SIGNUPS_VERIFY='true'

# generate using: openssl rand -base64 48
ADMIN_TOKEN="Mr3SwEdXM3cijxr0Yw9zRSHKmH9Q3OBYZb+mGv3W8WqYLFEFR3RhX+orxIIdL+zY"
INVITATIONS_ALLOWED='true'
SMTP_HOST=smtp.gmail.com
SMTP_FROM=bitwarden@domain.com
SMTP_FROM_NAME=Bitwarden
SMTP_PORT=587
SMTP_SSL='true'
SMTP_USERNAME=<gmail username>
SMTP_PASSWORD=<gmail password>

# expressvpn openvpn profile settings
OPENVPN_PROVIDER=EXPRESSVPN
OPENVPN_CONFIG=<expressvpn config name>
OPENVPN_USERNAME=<expressvpn username>
OPENVPN_PASSWORD=<expressvpn password>

# transmission settings
HEALTH_CHECK_HOST=google.com
# pick what you like from here - https://haugene.github.io/docker-transmission-openvpn/config-options/
TRANSMISSION_WEB_UI=flood-for-transmission
TRANSMISSION_DOWNLOAD_DIR=/data/downloads

# watchtower
WATCHTOWER_NOTIFICATION_EMAIL_FROM=<>
WATCHTOWER_NOTIFICATION_EMAIL_TO=<to mail>
WATCHTOWER_NOTIFICATION_EMAIL_SERVER=<>
WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=<>
WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=<>
WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=<>
WATCHTOWER_NOTIFICATION_EMAIL_DELAY=2
WATCHTOWER_NOTIFICATIONS_LEVEL=info

# wallabag
SYMFONY__ENV__FROM_EMAIL=<from email>

# Vultr snapshot
VULTR_API_KEY=<apikey>
VULTR_MAX_SNAPSHOTS=<max number of snapshots to keep>

# postgres
POSTGRES_MULTIPLE_DATABASES="DB1,ownerOfDB1: DB2,ownerOfDB2: ...DB(n), ownerOfDB(n)"

# planka
# generate `openssl rand -hex 64`
PLANKA_SECRET_KEY=<secert key>

# hackmd
MYSQL_ROOT_PASSWORD=<secret_password>
MYSQL_DATABASE=hackmd
MYSQL_USER=hackmd
MYSQL_PASSWORD=<password>

DB_USER=hackmd
DB_PASS=<password>
DB_NAME=hackmd
