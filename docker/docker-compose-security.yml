version: "3.9"

networks:
  docker-direct:
    external: true
  docker-vpn:
    external: true

services:
  caddy:
    container_name: caddy
    image: lucaslorentz/caddy-docker-proxy:alpine
    restart: unless-stopped
    hostname: caddy
    environment:
      - CADDY_INGRESS_NETWORKS=docker-direct,docker-vpn
    networks:
      docker-direct:
        ipv4_address: 10.10.2.4
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $DATA_DIR/caddy_data/:/data
    labels:
      caddy.local_certs:

  unbound:
    container_name: unbound
    image: mvance/unbound:latest
    restart: unless-stopped
    hostname: unbound
    networks:
      docker-direct:
        ipv4_address: 10.10.2.3

  pihole:
    container_name: pihole
    hostname: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    networks:
      docker-direct:
        ipv4_address: 10.10.2.2
    depends_on:
      - unbound
      - caddy
    environment:
      - PIHOLE_DNS_=unbound
      - WEBTHEME="default-dark"
      - WEBPASSWORD=pihole
      - ADMIN_EMAIL=${PIHOLE_ADMIN_EMAIL}
    volumes:
      - '$DATA_DIR/pihole/etc-pihole:/etc/pihole'
      - '$DATA_DIR/pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    labels:
      caddy: pihole.hub
      caddy.tls: internal
      caddy.redir: / /admin
      caddy.reverse_proxy: "{{upstreams 80}}"

  bitwarden:
    image: vaultwarden/server:alpine
    container_name: bitwarden
    hostname: bitwarden
    restart: unless-stopped
    user: $PUID:$PGID
    networks:
      - docker-direct
    volumes:
      - $DATA_DIR/bitwarden/:/data
    environment:
      - WEBSOCKET_ENABLED=true
      - DOMAIN=https://bitwarden.hub
      - SIGNUPS_ALLOWED=false
      - ADMIN_TOKEN=admin
      - SIGNUPS_VERIFY=true
      - INVITATIONS_ALLOWED=true
      - SMTP_HOST
      - SMTP_FROM=$BITWARDEN_SMTP_FROM
      - SMTP_FROM_NAME
      - SMTP_PORT
      - SMTP_SSL
      - SMTP_USERNAME
      - SMTP_PASSWORD
    healthcheck:
      test: curl -f http://bitwarden:80 &> /dev/null && echo "OK" || exit 1
      interval: 5s
    labels:
      caddy: bitwarden.hub
      caddy.reverse_proxy_0: "{{upstreams 80}}"
      caddy.tls: internal
      caddy.encode: gzip
      caddy.header.X-XSS-Protection: '"1; mode=block;"'
      caddy.header.X-Frame-Options: "DENY"
      caddy.header.X-Content-Type-Options: "none"
      caddy.reverse_proxy_1: "/notifications/hub/negotiate {{upstreams 80}}"
      caddy.reverse_proxy_2: "/notifications/hub {{upstreams 3012}}"

  archiver:
    image: vedhavyas/archiver:latest
    container_name: archiver
    hostname: archiver
    pull_policy: always
    # we need to give root access
    user: root:root
    networks:
      - docker-direct
    volumes:
      - $DATA_DIR:$DATA_DIR
      - $HUB_DIR/backups/hub:$HUB_DIR/backups/hub
    restart: unless-stopped
    environment:
      - SRC=$DATA_DIR
      - BACKUP=$HUB_DIR/backups/hub
