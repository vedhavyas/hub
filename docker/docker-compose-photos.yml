version: "3.9"

networks:
  docker-direct:
    external: true

services:
  immich-server:
    container_name: immich_server
    hostname: immich_server
    image: ghcr.io/immich-app/immich-server:release
    restart: unless-stopped
    networks:
      - docker-direct
    volumes:
      - $HUB_DIR/media/photos:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - ${CONF_DIR}/immich.conf
    environment:
      - NODE_ENV=production
      - JWT_SECRET=IMMICH_JWT_SECRET
    depends_on:
      - immich-redis
      - immich-postgres
    labels:
      caddy: photos.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 3001}}"

  immich-machine-learning:
    container_name: immich_machine_learning
    hostname: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:release
    networks:
      - docker-direct
    volumes:
      - $HUB_DIR/media/photos:/usr/src/app/upload
      - $DATA_DIR/immich/model_cache/:/cache
    env_file:
      - ${CONF_DIR}/immich.conf
    environment:
      - NODE_ENV=production
      - JWT_SECRET=IMMICH_JWT_SECRET
    depends_on:
      - immich-postgres
    restart: unless-stopped

  immich-redis:
    container_name: immich_redis
    hostname: immich_redis
    image: redis:6.2
    restart: unless-stopped
    volumes:
      - $DATA_DIR/immich/redis/:/data
    networks:
      - docker-direct

  immich-postgres:
    container_name: immich_postgres
    hostname: immich_postgres
    image: tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    networks:
      - docker-direct
    environment:
      POSTGRES_PASSWORD: immich
      POSTGRES_USER: immich
      POSTGRES_DB: immich
      PG_DATA: /var/lib/postgresql/data
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - $DATA_DIR/immich/postgres:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='${DB_DATABASE_NAME}' || exit 1; Chksum="$$(psql --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: ["postgres", "-c" ,"shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
