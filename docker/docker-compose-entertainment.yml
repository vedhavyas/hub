version: "3.9"

networks:
  docker-vpn:
    external: true
  docker-vpn-static:
    external: true
  docker-direct:
    external: true
  docker-direct-static:
    external: true
  docker-india:
    external: true

services:
  qbittorrent:
    container_name: qbittorrent
    image: ghcr.io/hotio/qbittorrent:latest
    hostname: qbittorrent
    environment:
      - PUID
      - PGID
      - UMASK=022
      - TZ
    volumes:
      - $DATA_DIR/qbittorrent:/config
      - $HUB_DIR/media/downloads/incomplete:/config/downloads/temp
      - $HUB_DIR/media:/data
    networks:
      docker-vpn-static:
        ipv4_address: 10.10.3.2
    healthcheck:
      test: 'HOST_IP="${HOST_IP}"; [[ -n $${HOST_IP} && "$$(curl -s https://icanhazip.com)" != "$${HOST_IP}" ]] && echo "OK" || { echo "VPN failed"; exit 1; }'
      interval: 15s
    labels:
      caddy: qbittorrent.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8080}}"

  flaresolverr:
    image: flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    hostname: flaresolverr
    networks:
      - docker-vpn
    environment:
      - LOG_LEVEL=info
      - CAPTCHA_SOLVER=hcaptcha-solver

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr:nightly
    networks:
      - docker-vpn
    restart: unless-stopped
    hostname: prowlarr
    environment:
      - UMASK=002
      - PUID
      - PGID
      - TZ
    volumes:
      - $DATA_DIR/prowlarr:/config
    labels:
      caddy: prowlarr.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 9696}}"

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    hostname: jackett
    networks:
      - docker-vpn
    restart: unless-stopped
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - $DATA_DIR/jackett:/config
      - /etc/localtime:/etc/localtime:ro
      - $HUB_DIR/media/downloads:/downloads
    healthcheck:
      test: curl -f http://jackett:9117 &> /dev/null && echo "OK" || exit 1
      interval: 15s
    labels:
      caddy: jackett.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 9117}}"

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    hostname: sonarr
    networks:
      - docker-vpn
    restart: unless-stopped
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DATA_DIR/sonarr/:/config
      - $HUB_DIR/media/:/data
    healthcheck:
      test: curl -f http://sonarr:8989 &> /dev/null && echo "OK" || exit 1
      interval: 15s
    labels:
      caddy: sonarr.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8989}}"

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    hostname: radarr
    networks:
      - docker-vpn
    restart: unless-stopped
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DATA_DIR/radarr/:/config
      - $HUB_DIR/media/:/data
    healthcheck:
      test: curl -f http://radarr:7878 &> /dev/null && echo "OK" || exit 1
      interval: 15s
    labels:
      caddy: radarr.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 7878}}"

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:latest
    hostname: bazarr
    networks:
      - docker-vpn
    restart: unless-stopped
    environment:
      - PUID
      - PGID
      - TZ
    depends_on:
      - sonarr
      - radarr
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DATA_DIR/bazarr/:/config
      - $HUB_DIR/media/:/data
    healthcheck:
      test: curl -f http://bazarr:6767 &> /dev/null && echo "OK" || exit 1
      interval: 15s
    labels:
      caddy: bazarr.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 6767}}"

  autobrr:
    container_name: autobrr
    image: ghcr.io/autobrr/autobrr:latest
    hostname: autobrr
    networks:
      - docker-vpn
    restart: unless-stopped
    user: $PUID:$PGID
    environment:
      - TZ
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DATA_DIR/autobrr/config:/config
    healthcheck:
      test: curl -f http://autobrr:7474 &> /dev/null && echo "OK" || exit 1
      interval: 15s
    labels:
      caddy: autobrr.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 7474}}"

  scraparr:
    container_name: scraparr
    image: ghcr.io/thecfu/scraparr:latest
    hostname: scraparr
    networks:
      - docker-vpn
    restart: unless-stopped
    user: $PUID:$PGID
    depends_on:
      - sonarr
      - radarr
      - prowlarr
    environment:
      - TZ
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DATA_DIR/scraparr/config.yaml:/scraparr/config/config.yaml
    labels:
      caddy: scraparr.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 7100}}"

  recommendarr:
    container_name: recommendarr
    image: tannermiddleton/recommendarr:latest
    hostname: recommendarr
    networks:
      - docker-vpn
    restart: unless-stopped
    depends_on:
      - sonarr
      - radarr
      - emby
    environment:
      - NODE_ENV=production
      - DOCKER_ENV=true
      - PORT=3000
      - PUBLIC_URL=https://recommendations.hub
      - FORCE_SECURE_COOKIES=true
    volumes:
      - $DATA_DIR/recommendarr/:/app/server/data
    labels:
      caddy: recommendations.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 3000}}"


  emby:
    image: emby/embyserver:latest
    container_name: emby
    restart: unless-stopped
    hostname: emby
    environment:
      - UID=$PUID
      - GID=$PGID
      - GIDLIST=$PGID
    volumes:
      - $DATA_DIR/emby/:/config
      - $HUB_DIR/media/:/mnt
    networks:
      - docker-vpn
    labels:
      caddy: emby.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8096}}"

  watch:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    hostname: jellyseerr
    networks:
      - docker-direct
      - docker-vpn
    environment:
      - TZ
      - JELLYFIN_TYPE=emby
    volumes:
      - $DATA_DIR/jellyseerr/config:/app/config
    healthcheck:
      test: nc -z localhost 5055 && echo "OK" || exit 1
      interval: 15s
    restart: unless-stopped
    labels:
      caddy: watch.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 5055}}"

  media-cleaner:
    container_name: media-cleaner
    image: vedhavyas/media-cleaner:latest
    restart: unless-stopped
    hostname: media-cleaner
    networks:
      - docker-vpn
    environment:
      - EMBY_HOST=http://emby:8096
      - EMBY_USERNAME
      - EMBY_PWD
      - DELETE_THRESHOLD_IN_DAYS
    volumes:
      - $HUB_DIR/media/downloads:/downloads
    depends_on:
      - emby

  podcasts:
    image: akhilrex/podgrab:latest
    container_name: podcasts
    restart: unless-stopped
    hostname: podcasts
    environment:
      - CHECK_FREQUENCY=240
    networks:
      - docker-vpn
    volumes:
      - $DATA_DIR/podcasts/config:/config
      - $HUB_DIR/media/podcasts:/assets
    labels:
      caddy: podcasts.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8080}}"

  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    hostname: syncthing
    restart: unless-stopped
    environment:
      - PUID
      - PGID
      - TZ
    networks:
      docker-direct-static:
        ipv4_address: 10.10.2.6
    volumes:
      - $DATA_DIR/syncthing/config:/config
      - $HUB_DIR/media/downloads/games:/games
      - $HUB_DIR/backups/obsidian:/obsidian
    labels:
      caddy: syncthing.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8384}}"

  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb
      MONGO_INITDB_ROOT_PASSWORD: mongodb
    networks:
      - docker-direct
    volumes:
      - $DATA_DIR/mongodb/data:/data/db

  my-spotify:
    image: lscr.io/linuxserver/your_spotify:latest
    container_name: my-spotify
    hostname: my-spotify
    restart: unless-stopped
    environment:
      - PUID
      - PGID
      - TZ
      - APP_URL=https://my-spotify.hub
      - SPOTIFY_PUBLIC=$SPOTIFY_CLIENT_ID
      - SPOTIFY_SECRET=$SPOTIFY_CLIENT_SECRET
      - MONGO_ENDPOINT=mongodb://my-spotify:my-spotify@mongodb:27017/my-spotify
      - MONGO_NO_ADMIN_RIGHTS=true
    networks:
      - docker-direct
    labels:
      caddy: my-spotify.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 80}}"

  youtube-downloader:
    image: tzahi12345/youtubedl-material:nightly
    container_name: youtube-downloader
    hostname: youtube-downloader
    restart: unless-stopped
    environment:
      - UID=$PUID
      - GID=$PGID
      - ytdl_use_local_db='true'
      - write_ytdl_config='true'
    networks:
      - docker-vpn
    volumes:
      - $DATA_DIR/youtube-downloader/appdata:/app/appdata
      - $HUB_DIR/media/downloads/youtube/audio:/app/audio
      - $HUB_DIR/media/downloads/youtube/video:/app/video
      - $DATA_DIR/youtube-downloader/subscriptions:/app/subscriptions
      - $DATA_DIR/youtube-downloader/users:/app/users
    labels:
      caddy: youtube.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 17442}}"

  ariang:
    image: hurlenko/aria2-ariang:latest
    container_name: ariang
    hostname: ariang
    restart: unless-stopped
    environment:
      - RPC_SECRET=NOBODYKNOWSME
      - PGID
      - PUID
      - ARIA2RPCPORT=443
    networks:
      - docker-vpn
    volumes:
      - $DATA_DIR/ariang/conf:/aria2/conf
      - $HUB_DIR/media/downloads/ariang:/aria2/data
    labels:
      caddy: download.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8080}}"

  jiotv:
    image: ghcr.io/jiotv-go/jiotv_go:latest
    container_name: jiotv
    hostname: jiotv
    restart: unless-stopped
    environment:
      - JIOTV_PATH_PREFIX=/app/.jiotv_go
      - TZ
      - JIOTV_DRM=false
      - JIOTV_EPG=true
      - JIOTV_DISABLE_LOGOUT=false
      - JIOTV_TITLE=JioTV
      - JIOTV_DEBUG=true
    networks:
      - docker-india
      - docker-vpn
    volumes:
      - $DATA_DIR/jiotv/conf:/app/.jiotv_go
    labels:
      caddy: jiotv.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 5001}}"

