version: "3.9"

networks:
  docker-vpn:
    external: true

services:
  qbittorrent:
    container_name: qbittorrent
    image: cr.hotio.dev/hotio/qbittorrent:latest
    environment:
      - PUID
      - PGID
      - UMASK=022
      - TZ
    volumes:
      - $DATA_DIR/qbittorrent:/config
      - $HUB_DIR/media/downloads/incomplete:/config/downloads/temp
      - $HUB_DIR/media:/data
    networks:
      docker-vpn:
        ipv4_address: 10.10.3.100
    healthcheck:
      test: [ "CMD-SHELL", "[[ $$(curl https://icanhazip.com) != ${HOST_IP} ]] && echo 'OK' || exit 1" ]
      interval: 15s
    labels:
      caddy: qbittorrent.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8080}}"

  flaresolverr:
    image: flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    networks:
      - docker-vpn
    environment:
      - LOG_LEVEL=info
      - CAPTCHA_SOLVER=hcaptcha-solver

  prowlarr:
    container_name: prowlarr
    image: cr.hotio.dev/hotio/prowlarr:nightly
    networks:
      - docker-vpn
    restart: unless-stopped
    environment:
      - UMASK=002
      - PUID
      - PGID
      - TZ
    volumes:
      - $DATA_DIR/prowlarr:/config
    labels:
      caddy: prowlarr.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 9696}}"

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    networks:
      - docker-vpn
    restart: unless-stopped
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - $DATA_DIR/jackett:/config
      - /etc/localtime:/etc/localtime:ro
      - $HUB_DIR/media/downloads:/downloads
    healthcheck:
      test: curl -f http://jackett:9117 &> /dev/null && echo "OK" || exit 1
      interval: 15s
    labels:
      caddy: jackett.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 9117}}"

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    networks:
      - docker-vpn
    restart: unless-stopped
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DATA_DIR/sonarr/:/config
      - $HUB_DIR/media/:/data
    healthcheck:
      test: curl -f http://sonarr:8989 &> /dev/null && echo "OK" || exit 1
      interval: 15s
    labels:
      caddy: sonarr.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8989}}"

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    networks:
      - docker-vpn
    restart: unless-stopped
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DATA_DIR/radarr/:/config
      - $HUB_DIR/media/:/data
    healthcheck:
      test: curl -f http://radarr:7878 &> /dev/null && echo "OK" || exit 1
      interval: 15s
    labels:
      caddy: radarr.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 7878}}"

  emby:
    image: emby/embyserver:latest
    container_name: emby
    restart: unless-stopped
    environment:
      - UID=$PUID
      - GID=$PGID
      - GIDLIST=$PGID
    volumes:
      - $DATA_DIR/emby/:/config
      - $HUB_DIR/media/:/mnt
    networks:
      - docker-vpn
    labels:
      caddy: emby.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8096}}"

  jellyfin:
    container_name: jellyfin
    image: linuxserver/jellyfin:latest
    restart: unless-stopped
    networks:
      - docker-vpn
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - $DATA_DIR/jellyfin/:/config
      - $HUB_DIR/media/:/data
    healthcheck:
      test: curl -f http://jellyfin:8096 &> /dev/null && echo "OK" || exit 1
      interval: 15s
    labels:
      caddy: jellyfin.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8096}}"

  entertainment:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    networks:
      - docker-vpn
    environment:
      - TZ
      - JELLYFIN_TYPE=emby
    volumes:
      - $DATA_DIR/jellyseerr/config:/app/config
    healthcheck:
      test: nc -z localhost 5055 && echo "OK" || exit 1
      interval: 15s
    restart: unless-stopped
    labels:
      caddy: entertainment.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 5055}}"

  media-cleaner:
    container_name: media-cleaner
    image: vedhavyas/media-cleaner:latest
    restart: unless-stopped
    networks:
      - docker-vpn
    volumes:
      - $HUB_DIR/media/downloads:/downloads
    environment:
      - EMBY_USER
      - EMBY_PASSWD_HASH
      - EMBY_ACCESS_TOKEN
      - EMBY_USER_KEY
    depends_on:
      - emby

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    container_name: audiobookshelf
    restart: unless-stopped
    environment:
      - AUDIOBOOKSHELF_UID=$PUID
      - AUDIOBOOKSHELF_GID=$PGID
    networks:
      - docker-vpn
    volumes:
      - $HUB_DIR/media/audio-books:/audiobooks
      - $HUB_DIR/media/podcasts:/podcasts
      - $DATA_DIR/audiobookshelf/config:/config
      - $DATA_DIR/audiobookshelf/metadata:/metadata
    labels:
      caddy: audio.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 80}}"

  podcasts:
    image: akhilrex/podgrab:latest
    container_name: podcasts
    restart: unless-stopped
    environment:
      - CHECK_FREQUENCY=240
    networks:
      - docker-vpn
    volumes:
      - $DATA_DIR/podcasts/config:/config
      - $HUB_DIR/media/podcasts:/assets
    labels:
      caddy: podcasts.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8080}}"
