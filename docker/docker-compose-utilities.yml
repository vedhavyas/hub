version: "3.9"

networks:
  docker-direct:
    external: true
  docker-direct-static:
    external: true

services:
  filebrowser:
    container_name: filebrowser
    image: filebrowser/filebrowser:v2
    restart: unless-stopped
    hostname: filebrowser
    command: ["--token-expiration-time=240h"]
    volumes:
      - '$HUB_DIR/:/srv/hub'
      - '$DATA_DIR/:/srv/data'
      - '$DATA_DIR/filebrowser/filebrowser.db:/database.db'
    networks:
      - docker-direct
    user: $PUID:$PGID
    labels:
      caddy: drive.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 80}}"

  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    restart: unless-stopped
    user: $PUID:$PGID
    volumes:
      - $DATA_DIR/redis/:/data
    networks:
      - docker-direct
    command: redis-server --appendonly yes

  wallabag:
    image: wallabag/wallabag:latest
    container_name: wallabag
    hostname: wallabag
    restart: unless-stopped
    # https://github.com/wallabag/docker/issues/233
    #user: $PUID:$PGID
    depends_on:
      - redis
    environment:
      - SYMFONY__ENV__DOMAIN_NAME=https://wallabag.hub
      - SYMFONY__ENV__SERVER_NAME="My bookmarks"
      - SYMFONY__ENV__FOSUSER_REGISTRATION=false
      - SYMFONY__ENV__FOSUSER_CONFIRMATION=false
      - SYMFONY__ENV__MAILER_HOST=mail.$DOMAIN
      - SYMFONY__ENV__MAILER_PORT=587
      - SYMFONY__ENV__MAILER_AUTH_MODE=login
      - SYMFONY__ENV__MAILER_ENCRYPTION=tls
      - SYMFONY__ENV__MAILER_USER=wallabag@$DOMAIN
      - SYMFONY__ENV__MAILER_PASSWORD
      - SYMFONY__ENV__FROM_EMAIL=wallabag@$DOMAIN
      - SYMFONY__ENV__TWOFACTOR_SENDER=wallabag@$DOMAIN
    volumes:
      - '$DATA_DIR/wallabag/data:/var/www/wallabag/data'
      - '$DATA_DIR/wallabag/images:/var/www/wallabag/web/assets/images'
    networks:
      - docker-direct
    healthcheck:
      test: curl -f http://wallabag:80 &> /dev/null && echo "OK" || exit 1
      interval: 5s
    labels:
      caddy: wallabag.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 80}}"

  hackmd:
    image: ghcr.io/linuxserver/hedgedoc:latest
    container_name: hackmd
    hostname: hackmd
    restart: unless-stopped
    volumes:
      - '$DATA_DIR/hackmd/config/:/config'
      - '$DATA_DIR/hackmd/db/:/data'
    environment:
      - CMD_DB_DIALECT="sqlite:/data/hackmd.db"
      - PGID
      - PUID
      - TZ
      - CMD_ALLOW_ANONYMOUS=false
      - CMD_ALLOW_EMAIL_REGISTER=false
      - CMD_DOMAIN=hackmd.hub
      - CMD_CSP_ALLOW_FRAMING=false
      - CMD_CSP_ALLOW_PDF_EMBED=false
      - CMD_USESSL=false
      - CMD_PROTOCOL_USESSL=true
      - CMD_SESSION_SECRET
    networks:
      - docker-direct
    labels:
      caddy: hackmd.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 3000}}"

  polkadot_apps:
    image: jacogr/polkadot-js-apps:latest
    container_name: polkadot_apps
    restart: unless-stopped
    hostname: polkadot_apps
    # looks like specific user is not set for apps
    #user: $PUID:$PGID
    networks:
      - docker-direct
    healthcheck:
      test: curl -f http://polkadot_apps:80 &> /dev/null && echo "OK" || exit 1
      interval: 5s
    labels:
      caddy_0: cfg.hub
      caddy_0.tls: internal
      caddy_0.reverse_proxy: "{{upstreams 80}}"
      caddy_1: air.hub
      caddy_1.tls: internal
      caddy_1.reverse_proxy: "{{upstreams 80}}"

  mysql:
    container_name: mysql
    image: mysql:latest
    hostname: mysql
    environment:
      - MYSQL_DATABASE=kimai
      - MYSQL_USER=kimai
      - MYSQL_PASSWORD=kimai
      - MYSQL_ROOT_PASSWORD
    command: --default-storage-engine innodb
    restart: unless-stopped
    volumes:
      - $DATA_DIR/mysql:/var/lib/mysql
    cap_add:
      - SYS_NICE
    networks:
      - docker-direct
    healthcheck:
      test: mysqladmin -p$$MYSQL_ROOT_PASSWORD ping -h localhost
      interval: 20s
      start_period: 10s
      timeout: 10s
      retries: 3

  kimai:
    container_name: kimai
    image: kimai/kimai2:apache-1.30.2-prod
    hostname: kimai
    environment:
      - ADMINMAIL=$KIMAI_ADMINMAIL
      - ADMINPASS=$KIMAI_ADMINPASS
      - DATABASE_URL=mysql://kimai:kimai@mysql/kimai
      - TRUSTED_HOSTS=kimai.hub,localhost,127.0.0.1
    depends_on:
      - mysql
    networks:
      - docker-direct
    restart: unless-stopped
    labels:
      caddy: kimai.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8001}}"

  webdav:
    container_name: webdav
    image: vedhavyas/webdav:latest
    restart: unless-stopped
    hostname: webdav
    user: $PUID:$PGID
    networks:
      - docker-direct
    volumes:
      - $HUB_DIR/:/data
    labels:
      caddy: webdav.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8080}}"

  cyberchef:
    image: mpepping/cyberchef:latest
    container_name: cyberchef
    restart: unless-stopped
    hostname: cyberchef
    networks:
      - docker-direct
    labels:
      caddy: cyberchef.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8000}}"

  ittools:
    container_name: it-tools
    image: corentinth/it-tools:latest
    restart: unless-stopped
    hostname: it-tools
    networks:
      - docker-direct
    labels:
      caddy: it-tools.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 80}}"

  ssh-server-goland:
    image: lscr.io/linuxserver/openssh-server:latest
    container_name: goland-ssh
    hostname: goland-ssh
    restart: unless-stopped
    environment:
      - PUID
      - PGID
      - TZ
      - SUDO_ACCESS=false
      - PASSWORD_ACCESS=true
      - USER_PASSWORD=goland
      - USER_NAME=goland
    networks:
      docker-direct-static:
        ipv4_address: 10.10.2.9
    volumes:
      - $DATA_DIR/goland-ssh/config:/config

  git:
    image: gogs/gogs:latest
    container_name: git
    hostname: git
    restart: unless-stopped
    volumes:
      - $DATA_DIR/gogs/data:/data/gogs
      - $HUB_DIR/apdata/gogs/repository:/data/git/gogs-repositories
    environment:
      - RUN_CROND=true
    networks:
      - docker-direct
    labels:
      caddy: git.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 3000}}"

  pdf:
    image: frooodle/s-pdf:latest
    container_name: sterling_pdf
    hostname: sterling_pdf
    restart: unless-stopped
    networks:
      - docker-direct
    volumes:
      - $HUB_DIR/apdata/sterling-pdf/training_data:/usr/share/tessdata
      - $DATA_DIR/sterling-pdf/configs:/configs
    environment:
      - DOCKER_ENABLE_SECURITY=false
      - INSTALL_BOOK_AND_ADVANCED_HTML_OPS=true
      - LANGS=en_US
    labels:
      caddy: pdf.hub
      caddy.tls: internal
      caddy.reverse_proxy: "{{upstreams 8080}}"

  moonbeam-destake:
    image: vedhavyas/moonbeam-destake:latest
    container_name: moonbeam-destake
    hostname: moonbeam-destake
    restart: unless-stopped
    networks:
      - docker-direct
